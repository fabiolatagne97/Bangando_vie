name: Main Workflow
on:
  push:
    branches-ignore:
      - master

jobs:
#  lint: 
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v2
#      - name: Set up python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8
#      - name: Install linting libraries
#        run: |
#            cd function
#            pip install flake8
#      - name: Lint with flake8
#        run: |
#            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            
  check-for-secrets:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Yelp's detect-secrets
        uses: RobertFischer/detect-secrets-action@v2.0.0

jobs:
  set-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Use environment variables
        run: |
          echo "GIT_SHA=${GIT_SHA}"
          echo "GIT_BRANCH=${GIT_BRANCH}"
          #  set-workspace-and-deploy:
          #    runs-on: 'ubuntu-latest'
          #    steps:
          #      - name: Checkout
          #        uses: actions/checkout@v2
          #
          #      - name: Install tarraform
          #        uses: hashicorp/setup-terraform@v1.2.1
          #
          #      - name: Terraform Init
          #        id: init
          #        run: terraform init
          #
          #      - name: setup workspace
          #        id: workspace
          #        run: terraform workspace ${GITHUB_REF##*/}
          #

        #  deploy:
        #    runs-on: ubuntu-latest
        #    env:
        #      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #
        #    steps:
        #    - uses: actions/checkout@main
        #    - uses: hashicorp/setup-terraform@v1.2.1
        #
        #    - name: Terraform fmt
        #      id: fmt
        #      run: terraform fmt -check
        #      continue-on-error: true
        #
        #    - name: Terraform Init
        #      id: init
        #      run: terraform init
        #
        #    - name: Terraform Validate
        #      id: validate
        #      run: terraform validate
        #
        #    - name: Terraform Plan
        #      id: plan
        #      run: terraform plan
        #
        #    - name: Terraform Plan Status
        #      if: steps.plan.outcome == 'failure'
        #      run: exit 1
        #
        #    - name: Terraform Apply
        #      run: terraform apply -auto-approve
        #
