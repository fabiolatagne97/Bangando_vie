name: Deploy cases
on:
  push:
    paths:
      - '**.tf'
      - 'html/**'
      - 'api/**'
      - 'infra/templates/**'
      - '.github/workflows/deploy_push.yml'
      - 'requirements.txt'
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TF_VAR_MAINTAINER_MAIL: ${{ secrets.TF_VAR_MAINTAINER_MAIL }}
      TF_VAR_WEBSITE_BUCKET_NAME: "mtchoun-mouh.mongulu.cm"
      TF_VAR_IMAGES_BUCKET_NAME: "djansang"
      TF_VAR_API_KEY: ${{ secrets.TF_VAR_API_KEY }}
      TF_VAR_SENTRY_DNS: ${{ secrets.TF_VAR_SENTRY_DNS}}
      API_KEY_TEST_MAIL: ${{secrets.API_KEY_TEST_MAIL}}
      TEST_MAIL_NAMESPACE: ${{secrets.TEST_MAIL_NAMESPACE}}    
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # ratchet:aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::053932140667:role/mongulu-github
          role-session-name: mtchoun-mouh-deployment
          aws-region: eu-central-1
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # ratchet:actions/checkout@v2
      - name: Install tarraform
        uses: hashicorp/setup-terraform@d22444889af304a44b997011fbabb81ff705a7b4 # ratchet:hashicorp/setup-terraform@v1.2.1
        with:
          terraform_wrapper: false
      - name: Install tfcmt
        uses: shmokmt/actions-setup-tfcmt@v2
      - name: Install github-comments
        uses: shmokmt/actions-setup-github-comment@v2
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false
      - name: Terraform Init
        id: init
        run: |
          cd infra
          terraform init
      - name: setup workspace
        id: workspace
        if: github.ref_name != 'master'
        run: |
          cd infra
          terraform workspace new $GITHUB_REF_NAME || terraform workspace select $GITHUB_REF_NAME
      - name: List workspace
        if: github.ref_name != 'master'
        run: |
          cd infra
          terraform workspace list
      - name: Terraform Validate
        id: validate
        run: |
          cd infra
          terraform validate
      - name: Terratag by env0
        run: |
          curl -O -L https://github.com/env0/terratag/releases/download/v0.1.48/terratag_0.1.48_linux_amd64.tar.gz
          tar -xvf terratag_0.1.48_linux_amd64.tar.gz
          ./terratag -tags="project=mtchoun-mouh,environment=$GITHUB_REF_NAME" -dir=infra/ -rename=false
      - name: Terraform Plan
        id: plan
        run: |
          cd infra
          tfcmt plan -- terraform plan -no-color
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        run: |
          cd infra
          tfcmt apply -- terraform apply -auto-approve -no-color
      - name: Website URL
        id: websiteUrl
        run: |
          cd infra
          echo "website_url=$(terraform output -json website_url | jq -r .)" >> $GITHUB_ENV
      - name: Test
        run: echo "$website_url"
      - name: Copy Site files
        if: github.ref_name == 'master'
        run: |
          cd infra
          aws s3 sync ../html s3://${TF_VAR_WEBSITE_BUCKET_NAME} --delete
      - name: Copy Site files
        if: github.ref_name != 'master'
        run: |
          cd infra
          aws s3 sync ../html s3://$GITHUB_REF_NAME-${TF_VAR_WEBSITE_BUCKET_NAME} --delete
      - name: "website: check readiness"
        uses: APina03/wait_for_response@master
        with:
          url: ${{ env.website_url }}
          responseCode: 200
          timeout: 2000
          interval: 500
      - name: Set up Python
        uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a # ratchet:actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install -r api/requirements.txt
      - name: test functions
        run: "\ncoverage run -m pytest api/test_extract.py api/test_notify.py \ncoverage report -m\n"
      - name: "website: check liveness"
        run:  "pytest api/test_liveness_mtchoun-mouh.py"
      
  add-coverage-badge:
    runs-on: ubuntu-latest
    if: github.ref_name == 'master'
    steps:
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # ratchet:actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a # ratchet:actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install -r api/requirements.txt
      - name: test functions
        run: "\ncoverage run -m pytest api/test_extract.py api/test_notify.py \ncoverage report -m\n"
      - name: "website: check liveness"
        run:  "pytest api/test_liveness_mtchoun-mouh.py"        
      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@c3a0870495183a1848c89d568db7a4e7954fee71 # ratchet:tj-actions/coverage-badge-py@v1.8
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@c09bcad97929b17bacf737670bee312af98be94f # ratchet:tj-actions/verify-changed-files@v9     
        id: changed_files
        with:
          files: coverage.svg
      - name: Commit files
        if: steps.changed_files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage.svg
          git commit -m "Updated coverage.svg"
      - name: Push changes
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@552c074ed701137ebd2bf098e70c394ca293e87f # ratchet:ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.ref_name }}
