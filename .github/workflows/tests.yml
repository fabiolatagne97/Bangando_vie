name: Test Workflow
on:
  push:
    branches-ignore:
      - master
    paths:
      - '**.tf'
      - 'html/**'
      - 'api/**'
      - 'templates/**'

jobs:

  check-for-secrets:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Yelp's detect-secrets
        uses: RobertFischer/detect-secrets-action@v2.0.0

  setup-new-env:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_MAINTAINER_MAIL: ${{ secrets.TF_VAR_MAINTAINER_MAIL }}
      TF_VAR_WEBSITE_BUCKET_NAME: ${{ secrets.TF_VAR_WEBSITE_BUCKET_NAME }}
      TF_VAR_IMAGES_BUCKET_NAME: ${{ secrets.TF_VAR_IMAGES_BUCKET_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install tarraform
        uses: hashicorp/setup-terraform@v1.2.1

      - name: Terraform fmt
        id: fmt
        run: |
          cd infra
          terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          cd infra
          terraform init

      - name: setup workspace
        id: workspace
        run: |
          cd infra
          terraform workspace new $GITHUB_REF

      - name: List workspace
        run: |
          cd infra
          terraform workspace list

      - name: Terraform Validate
        id: validate
        run: |
          cd infra
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd infra
          terraform plan

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: |
          cd infra
          terraform apply -auto-approve

      - name: Website URL
        run: |
          cd infra
          terraform output website_url

      - name: Copy Site files
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: $GITHUB_HEAD_REF-${TF_VAR_WEBSITE_BUCKET_NAME}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-central-1'
          SOURCE_DIR: 'html'

  unittest:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - uses: actions/cache@v2
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install -r api/requirements.txt
      - name: test functions
        run: | 
          cd api &&  pytest test_extract.py &&\
          pytest test_notify.py
          coverage run -m pytest test_extract.py test_notify.py 
          coverage report -m
      
  commitlint:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5