name: Main Workflow
on:
  push:
    branches:
      - master

jobs:

  check-for-secrets:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Yelp's detect-secrets
        uses: RobertFischer/detect-secrets-action@v2.0.0

  deploy-to-prod:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_MAINTAINER_MAIL: ${{ secrets.TF_VAR_MAINTAINER_MAIL }}
      TF_VAR_WEBSITE_BUCKET_NAME: "mtchoun-mouh.mongulu.cm"
      TF_VAR_IMAGES_BUCKET_NAME: ${{ secrets.TF_VAR_IMAGES_BUCKET_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install tarraform
        uses: hashicorp/setup-terraform@v1.2.1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Copy Site files
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: ${TF_VAR_WEBSITE_BUCKET_NAME}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-central-1'
          SOURCE_DIR: 'html'

  add-coverage-badge:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install -r api/requirements.txt
      
      - name: test functions
        run: | 
          
          coverage run -m pytest api/test_extract.py api/test_notify.py 
          coverage report -m
      
      
      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v1.8
      

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v9
        id: changed_files
        with:
          files: coverage.svg

      - name: Commit files
        if: steps.changed_files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage.svg
          git commit -m "Updated coverage.svg"

      - name: Push changes
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.ref }}